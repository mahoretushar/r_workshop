str(j1)
new.j1 <- as.data.frame(j1)
View(new.j1)
View(j1)
?fromJSON
class(a)
?read.csv
# you can use <- or = to create variables or objects in R
# int
a1 <- 100
a12 = 101
# floating number
a2 <- 100.5
class(a2)
new.a2 <- as.numeric(a2)
class(new.a2)
new.a2 <- as.integer(a2)
class(new.a2)
a1
print(a1)
print(4)
print("Hi Hello")
?c
v1 <- c(1,2,3)
v2 <- c(4,5,6)
# you can use <- or = to create variables or objects in R
# int
a1 <- 100, 900
c1 <- v1 * v2
c1
v1 <- c(1,2,3,10)
c1 <- v1 * v2
c1
v1 <- c(1,2,3)
c2 <- v1 + v2
c2
c1 <- v1 * v2
x = list( v1, c1, v2, 100)
x
class(x)
12.3
new.list <- list(c("Sachin","Saurav","Rahul"), matrix(c(28000,25000,220000,100,500,800), nrow = 2), list("x",12.3))
print(new.list)
?name
names(new.list) <- c("Names", "Numbers", "Random")
print(new.list)
#Access the first element of the list.
print(new.list[1])
print(new.list[3])
"New Player"
print(new.list[4])
new.lsit[4]
#Add an element at the end of the list.
new.list[4] <- "New Player"
new.lsit[4]
print(new.list[4])
NULL
new.list[3]  <- NULL
print(new.list[3])
#Update the 3rd Element.
new.list[3] <- "updated element"
print(new.list[3])
c(x,new.list)
two.list <- c(x,new.list)
print(two.list)
v1.new <- c(2,9,3)
print(two.list)
v1.new <- c(2,9,3)
v2.new <- c(10,11,12,13)
new.arr <- array(c(v1.new,v2.new),dim = c(3,3,3))
print(new.arr)
new.arr <- array(c(v1.new,v2.new), dim = c(3,3,2))
print(new.arr)
new.arr <- array(c(v1.new,v2.new), dim = c(3,3,4))
print(new.arr)
?colnames
#naming columns
income.orig <- read.delim("adult-data.txt", header = FALSE, sep = ",", na.strings=c(""," "," ?","NA"))
setwd("~/programming/r/r_workshop/code/day_1")
#naming columns
income.orig <- read.delim("adult-data.txt", header = FALSE, sep = ",", na.strings=c(""," "," ?","NA"))
View(income.orig)
# name the columns
colnames(income.orig) <- c(
"age",
"workclass",
"final.weight",
"education",
"education.num",
"marital-status",
"occupation",
"relationship",
"race",
"sex",
"capital.gain",
"capital.loss",
"hours.per.week",
"country",
"final.class"
)
View(income.orig)
new.vector <- income.orig[,5]
View(new.vector)
new.vector <- income.orig[120:3000,5]
View(new.vector)
View(income.orig)
income.orig$education.num <- NULL
View(income.orig)
View(income.orig)
nb <- rnorm(1:50)
nb
for (v in c(1:5)) {
print(v)
}
for (v in c(1:5)) {
if(v <= 5)
print(v)
else(
print("i m done")
)
}
for (v in c(1:5)) {
if(v <= 4)
print(v)
else(
print("i m done")
)
}
for (v in c(1:5)) {
if(v <= 3)
print(v)
else(
print("i m done")
)
}
for (v in a) {
if(v <= 2)
print(v)
else(
print("i m done")
)
}
a <- c(1:5)
for (v in a) {
if(v <= 2)
print(v)
else(
print("i m done")
)
}
b <- c(1:10)
for (v in b) {
if(v <= 5)
print(v)
else(
print("i m done")
)
}
setwd("~/Great lakes")
setwd("~/programming/r/r_workshop/code/day_1")
iplbatting <- read.csv("batting_bowling_ipl_bat.csv", header = TRUE)
View(iplbatting)
for (v in iplbatting$Runs) {
print(v)
}
r <- iplbatting[6,]
r
r <- 500
while (r!=495){
print("this is my")
}
2^3
new.function <- function(a) {
for(i in 1:a) {
b <- i^2
print(b)
}
}
# Call the function new.function supplying 6 as an argument.
new.function(6)
#1.	Reading CSV files with R
read.csv()
fb<- read.csv("dataset_Facebook.csv", header = TRUE, sep = ";")
setwd("~/programming/r/r_workshop/code/day_2")
fb<- read.csv("dataset_Facebook.csv", header = TRUE, sep = ";")
#separator is automatically recognized
?fread()
#separator is automatically recognized
?fread
?table
install.packages("data.table")
#separator is automatically recognized
?fread
#separator is automatically recognized
?fread
?data.table
?read.table
require(dplyr)
fb <- read.csv("dataset_Facebook.csv", header = TRUE, sep = ";")
a <- fb$Post.Hour
a
View(a)
a <- as.vector(a)
View(a)
a
v <- fb[,2]
View(v)
View(v)
v
u <- fb[1:10,2]
View(u)
u <- fb[1:10,2]
View(u)
u
View(u)
view(u)
View(u)
class(u)
View(u)
u <- fb[1:10,2:4]
View(u)
u <- fb[1:10,2]
class(u)
View(u)
z <- fb$Page.total.likes
z
a <- c(fb$Post.Hour, fb$Page.total.likes)
a
View(a)
a <- fb$Post.Hour
View(a)
a <- fb$Post.Hour
View(a)
a
titanicd <- read.csv("train_titanic.csv")
View(titanicd)
setwd("~/programming/r/r_workshop/code/day_2")
titanicd <- read.csv("train_titanic.csv")
View(titanicd)
titanicdna <- read.csv("train_titanic.csv", na.strings = c("NA", ""))
View(titanicdna)
str(titanicdna)
summary(titanicdna)
is.na(titanicdna$Age)
sum(is.na(titanicdna$Age))
str(titanicdna)
177/891
?read.csv
setwd("~/programming/r/r_workshop/code/day_2")
fb <- read.csv("dataset_Facebook.csv")
View(fb)
fb <- read.csv("dataset_Facebook.csv", header = FALSE)
View(fb)
fb <- read.csv("dataset_Facebook.csv", header = TRUE)
View(fb)
fb <- read.csv("dataset_Facebook.csv", header = TRUE, sep = ";")
fb <- read.csv("dataset_Facebook.csv", header = TRUE)
fb <- read.csv("dataset_Facebook.csv", header = TRUE, sep = ";")
View(fb)
#2.	Reading xls files with R
library(xlsx)
?read.xlsx()
lc <- read.xlsx("LungCap_Dataset.xls")
lc <- read.xlsx("LungCap_Dataset.xls", sheetIndex = 1)
View(lc)
str(lc)
#3.	Reading txt files with R
?read.delim()
?xmlParse()
#4.	read xml
library(XML)
?xmlParse()
require(dplyr)
View(fb)
fb <- read.csv("dataset_Facebook.csv", header = TRUE, sep = ";")
View(fb)
a <- fb$Post.Hour
a
View(fb)
v <- fb[,6]
v <- fb[2,6]
View(v)
v
v <- fb[,3]
v
u <- fb[1:10,2:6]
View(u)
z <- fb$Pagetotal.likes
z
z <- fb$Page.total.likes
z
a = mean(fb$Lifetime.Post.Total.Reach + fb$Page.total.likes +
fb$Lifetime.Post.Total.Impressions)
a
b = with(fb, mean(Lifetime.Post.Total.Reach + Page.total.likes +
Lifetime.Post.Total.Impressions))
b
View(fb)
str(fb)
library(dplyr)
?select
Select <- select(fb, Category:Paid)
View(Select)
str(fb)
Filter <- filter(fb, Lifetime.Post.Total.Reach > 3000)
View(Filter)
View(Select)
View(Filter)
?arrange
arranged <- arrange(Filter, Lifetime.Post.Total.Reach)
View(arranged)
?sort
View(arranged)
str(arranged)
?mutate
2^3
arranged %>% mutate(
comment.square = comment ^ 2,
likeo = like + 2
)
View(arranged)
arranged <- arranged %>% mutate(
comment.square = comment ^ 2,
likeo = like + 2,
)
View(arranged)
str(fb)
fb$comment <- as.numeric(fb$comment)
fb$Category <- as.factor(fb$Category)
str(fb)
fb <- read.csv("dataset_Facebook.csv", header = TRUE, sep = ";")
View(fb)
View(Select)
View(fb)
?subset
reach <- subset(fb,select=c(Lifetime.Post.Total.Reach,Page.total.likes))
View(reach)
reach1 <- select(fb,Lifetime.Post.reach.by.people.who.like.your.Page,comment)
View(reach1)
View(fb)
library(xlsx)
LA2017_candidate <- read.xlsx("LA 2017.xls", sheetIndex = 1)
LA2017_candidatebye <- read.xlsx("LA 2017.xls", sheetIndex = 3)
View(LA2017_candidate)
plxsell <- merge(LA2017_candidate, LA2017_candidatebye, all.x = TRUE, all.y = TRUE)
7942+182
View(plxsell)
View(arranged)
View(arranged)
library(Amelia)
missmap(fb, main="Missing Values")
View(fb)
View(fb)
setwd("~/programming/r/r_workshop/code/day_2,3")
titanicd <- read.csv("train_titanic.csv")
View(titanicd)
titanicdna <- read.csv("train_titanic.csv", na.strings = c("NA", ""))
View(titanicdna)
View(titanicdna)
str(titanicdna)
?summary
summary(titanicdna)
177/891
is.na(titanicdna$Age)
sum(is.na(titanicdna$Age))
str(titanicdna)
sum(is.na(titanicdna$Age) == TRUE) /  length(titanicdna$Age)
summary(titanicdna)
View(titanicdna)
titanicdna$Embarked <- as.factor(titanicdna$Embarked)
class(titanicdna$Embarked)
summary(titanicdna)
mnAge <- mean(titanicdna$Age, na.rm = TRUE)
mnAge
Ageupdated <- mutate(titanicdna,Ageupdated = ifelse(is.na(Age), mnAge,Age))
library(dplyr)
?mutate
Ageupdated <- mutate(titanicdna,Ageupdated = ifelse(is.na(Age), mnAge,Age))
View(Ageupdated)
View(titanicdna)
sum(is.na(titanicdna$Embarked))
Embarkedupdated <- mutate(titanicdna,Embarkedupdated = ifelse(is.na(Embarked), "S",Embarked))
sum(is.na(titanicdna$Embarkedupdated))
View(Embarkedupdated)
Embarkedupdated <- mutate(titanicdna,Embarkedupdated = ifelse(is.na(Embarked), "S",Embarked))
setwd("~/programming/r/r_workshop/code/day_4")
Titanicdata <- read.csv("train_titanic.csv", header = TRUE)
View(Titanicdata)
str(Titanicdata)
library(Amelia)
missmap(fb, main="Missing Values")
fb <- read.csv("dataset_Facebook.csv", header = TRUE, sep = ";")
missmap(fb, main="Missing Values")
missmap(fb, main="Missing Values")
missmap(Titanicdata, main="Missing values")
View(Titanicdata)
fbdata <- read.csv("dataset_Facebook.csv", header = TRUE, sep = ";")
barplot(fbdata)
str(fbdata)
fbdata$Type <- as.factor(fb$Type)
str(fbdata)
View(fbdata)
barplot(fbdata$like, main = "Bar plot for likes", col = "red")
barplot(Titanicdata$Age)
hist(fbdata$like)
str(Titanicdata)
hist(as.numeric(Titanicdata$like))
barplot(Titanicdata$Age)
hist(Titanicdata$Age)
View(Titanicdata)
barplot(fbdata$like, main = "Bar plot for likes", horiz=TRUE, col = "red")
barplot(fbdata$Post.Month, main = "Bar plot for likes", horiz=TRUE, col = "red")
?barplot
View(fbdata)
plot(Titanicdata$Age)
plot(fbdata$Lifetime.Post.Consumptions)
plot(fbdata$Lifetime.Post.Consumptions,xlim = c(0,1000), ylim = c(0, 5000))
plot(fbdata$Lifetime.Post.Consumptions)
plot(fbdata$Lifetime.Post.Consumptions,xlim = c(0,1000), ylim = c(0, 5000))
plot(fbdata$Page.total.likes)
?plot
?plot
?plot
plot(fbdata$Lifetime.Post.Consumptions,xlim = c(0,1000), ylim = c(0, 5000), type = "l")
plot(fbdata$Lifetime.Post.Consumptions, type = "l")
plot(fbdata$Lifetime.Post.Consumptions, type = "o")
plot(fbdata$Lifetime.Post.Consumptions, type = "h")
plot(fbdata$Lifetime.Post.Consumptions, type = "h")
plot(fbdata$Lifetime.Post.Consumptions, type = "s")
plot(density(fbdata$Page.total.likes))
plot(Lifetime.Post.Consumptions ~ Type, data = fbdata)
plot(Lifetime.Post.Total.Reach ~ Lifetime.Post.Total.Impressions , data = fbdata,
main="Relationship between car Reach & Impressions",
col= "red")
str(fbdata)
data("mtcars") #inbuilt datasets
heatmap(as.matrix(mtcars),
Rowv = NA,
Colv = NA,
col= heat.colors(4, alpha=1))
boxplot(fbdata$Page.total.likes)
head(mtcars)
pairs(mtcars)
pairs(mtcars[,2:6])
boxplot(fbdata$Page.total.likes)
plot(Lifetime.Post.Consumptions ~ Type, data = fbdata)
par(mfrow=c(2,3)) #4,8
boxplot(fbdata$Page.total.likes)
heatmap(as.matrix(mtcars),
Rowv = NA,
Colv = NA,
col= heat.colors(4, alpha=1))
boxplot(fbdata$Page.total.likes)
plot(Lifetime.Post.Consumptions ~ Type, data = fbdata)
plot(Lifetime.Post.Total.Reach ~ Lifetime.Post.Total.Impressions , data = fbdata,
main="Relationship between car Reach & Impressions",
col= "red")
plot(fbdata$Page.total.likes)
plot(fbdata$Lifetime.Post.Consumptions, type = "s")
hist(Titanicdata$Age)
boxplot(fbdata$Page.total.likes)
library(RColorBrewer)
display.brewer.all()
infy <- read.csv("infy.csv", header = TRUE)
View(infy)
head(infy)
str(infy)
tcs <- read.csv("tcs.csv", header = TRUE)
head(tcs)
wipro <- read.csv("wipro.csv", header = TRUE)
plot(Average.Price~Open.Price,data=infy,type="l",main="Percentage change in GDP",ylab="")
mtext(side=4,at=infy$Open.Price[infy$Open.Price],text="Open Price")
lines(infy$Average.Price~infy$High.Price,col=pal[2],lwd=2)
lines(infy$Average.Price~infy$High.Price,lwd=2)
pal[2]
lines(infy$Average.Price~infy$High.Price,col=pal[2],lwd=2)
lines(infy$Average.Price~infy$High.Price,col=pal[2],lwd=2)
plot(Average.Price~Open.Price,data=infy,type="l",main="Percentage change in GDP",ylab="")
mtext(side=4,at=infy$Open.Price[infy$Open.Price],text="Open Price")
lines(infy$Average.Price~infy$Low.Price,col=pal[3],lwd=2)
mtext(side=4,at=infy$Low.Price[length(infy$Low.Price)],text="Low price", col=pal[3],line=0.3,las=2)
lines(infy$Average.Price~infy$High.Price,lwd=2)
library(maps)
map()
?map
map("france")
map("usa", fill=TRUE, col=heat.colors(256))
View(fbdata)
library(ggplot2)
data("iris")
qplot(Sepal.Length, Sepal.Width, data=iris, colour = Species)
library(xlsx)
lung= read.xlsx("LungCap_Dataset.xls", sheetIndex = 1, header = TRUE)
View(lung)
qplot(lung$Age..years.,lung$Height.inches.,data = lung,shape=as.factor(Gender))
ggplot(data = lung, aes(x=Age..years., y=Height.inches.)) + geom_bar(stat = "identity",position = "dodge",colour= "blue", fill = "gray")
sctplot<-ggplot(data = lung, aes(x=Age..years., y=Height.inches.)) + geom_point()
sctplot + geom_smooth(col="green")
ggplot(data= lung, aes(x=Smoke, y=LungCap.cc., fill=Age..years.)) + geom_bar(stat="identity",position="dodge")
ggplot(data= lung, aes(x=Smoke, y=LungCap.cc.)) + geom_bar(stat="identity",position="dodge")
ggplot(data= lung, aes(x=Smoke, y=LungCap.cc., fill=Age..years.)) + geom_bar(stat="identity",position="dodge")+coord_flip()
ggplot(data=lung,aes(x=Age..years.))+geom_density()
ggplot(data=lung,aes(y=LungCap.cc.,x=Gender))+geom_boxplot()
CTDF.dev <- read.csv("DEV_SAMPLE.csv", header = TRUE)
head(CTDF.dev)
str(CTDF.dev)
ggplot(data = CTDF.dev,aes(y=CTDF.dev$Balance, x=CTDF.dev$Occupation)) +geom_boxplot(aes(col=Occupation))+labs(title="Boxplot of Balance for all occupation types")
data("iris")
head(iris)
library(lattice)
library(scatterplot3d)
scatterplot3d(x=iris$Sepal.Length,y=iris$Sepal.Width,z=iris$Species)
