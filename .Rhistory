provinces_confirmed <- outbreak_webpage %>% html_nodes("table") %>%
.[[1]] %>% html_table(fill = TRUE) %>% rename(Date = "Date (CST)")
# fix up the column names, get rid of footnotes and other
# non-data and convert columns to appropriate data types.
excl_hubei <- provinces_confirmed %>% select(starts_with("ExcludingHubei")) %>%
pull(1)
hubei_sans_wuhan <- provinces_confirmed %>% select(starts_with("Hubei:")) %>%
select(-contains("clinical", ignore.case = TRUE)) %>% pull(1)
# utility function to remove commas in numbers as character
# strings
rm_commas <- function(x) gsub(",", "", x)
library(tidyverse)
library(ggplot2)
library(readr)
library(maps)
library(viridis)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
library(ggplot2)
library(readr)
library(maps)
library(viridis)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(ggplot2)
library(readr)
library(maps)
library(viridis)
## get the COVID-19 data
datacov <- read_csv("code/day_5/time_series_covid19_deaths_global.csv")
## get the world map
world <- map_data("world")
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3) +
geom_point(data=datacov, aes(x=Long, y=Lat, size=`3/3/20`, color=`3/3/20`),stroke=F, alpha=0.7) +
scale_size_continuous(name="Cases", trans="log", range=c(1,7),breaks=mybreaks, labels = c("1-19", "20-99", "100-999", "1,000-49,999", "50,000+")) +
# scale_alpha_continuous(name="Cases", trans="log", range=c(0.1, 0.9),breaks=mybreaks) +
scale_color_viridis_c(option="inferno",name="Cases", trans="log",breaks=mybreaks, labels = c("1-19", "20-99", "100-999", "1,000-49,999", "50,000+")) +
theme_void() +
guides( colour = guide_legend()) +
labs(caption = "Data Repository provided by Johns Hopkins CSSE. Visualization by DataScience+ ") +
theme(
legend.position = "bottom",
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#ffffff", color = NA),
panel.background = element_rect(fill = "#ffffff", color = NA),
legend.background = element_rect(fill = "#ffffff", color = NA)
)
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3) +
geom_point(data=datacov, aes(x=Long, y=Lat, size=`3/3/20`, color=`3/3/20`),stroke=F, alpha=0.7) +
scale_size_continuous(name="Cases", trans="log", range=c(1,7),breaks=mybreaks, labels = c("1-19", "20-99", "100-999", "1,000-49,999", "50,000+")) +
# scale_alpha_continuous(name="Cases", trans="log", range=c(0.1, 0.9),breaks=mybreaks) +
scale_color_viridis_c(option="inferno",name="Cases", trans="log",breaks=mybreaks, labels = c("1-19", "20-99", "100-999", "1,000-49,999", "50,000+")) +
theme_void() +
guides( colour = guide_legend()) +
labs(caption = "Data Repository provided by Johns Hopkins CSSE. Visualization by DataScience+ ") +
theme(
legend.position = "bottom",
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#ffffff", color = NA),
panel.background = element_rect(fill = "#ffffff", color = NA),
legend.background = element_rect(fill = "#ffffff", color = NA)
)
# cutoffs based on the number of cases
mybreaks <- c(1, 20, 100, 1000, 50000)
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3) +
geom_point(data=datacov, aes(x=Long, y=Lat, size=`3/3/20`, color=`3/3/20`),stroke=F, alpha=0.7) +
scale_size_continuous(name="Cases", trans="log", range=c(1,7),breaks=mybreaks, labels = c("1-19", "20-99", "100-999", "1,000-49,999", "50,000+")) +
# scale_alpha_continuous(name="Cases", trans="log", range=c(0.1, 0.9),breaks=mybreaks) +
scale_color_viridis_c(option="inferno",name="Cases", trans="log",breaks=mybreaks, labels = c("1-19", "20-99", "100-999", "1,000-49,999", "50,000+")) +
theme_void() +
guides( colour = guide_legend()) +
labs(caption = "Data Repository provided by Johns Hopkins CSSE. Visualization by DataScience+ ") +
theme(
legend.position = "bottom",
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#ffffff", color = NA),
panel.background = element_rect(fill = "#ffffff", color = NA),
legend.background = element_rect(fill = "#ffffff", color = NA)
)
#------------setup---------------
# 59% cases male
20686 / (20686 + 14378)
# 71% deaths men (no boys)
2139 / (2139 + 890)
library(tidyverse)
library(scales)
library(wpp2019)
# colours for male and female used by Washington Post 2017; see https://blog.datawrapper.de/gendercolor/
sex_cols <- c(Male = "#F4BA3B", Female =  "#730B6D")
#---------------------Italian fatality rates---------
italy_rates <-tibble(
age_grp = rep(c('0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70-79', '80-89', '90+'), 2),
sex = rep(c("Male", "Female"), each = 10),
cfr = c(0, 0, 0, 0.6, 0.7,   1.7, 6.0, 17.8, 26.4, 32.5,
0, 0, 0, 0.2,   0.4, 0.6, 2.8,  10.7, 19.1,   22.3) / 100,
age_midpt = rep(c(5, 15, 25, 35, 45, 55, 65, 75, 85, 95), 2)
)
italy_rates %>%
ggplot(aes(x = age_midpt, y = cfr, colour = sex)) +
geom_point() +
geom_text(data = filter(italy_rates, cfr > 0.01),
aes(label = percent(cfr), y = cfr + 0.012), size = 3) +
geom_line() +
scale_x_continuous(breaks = italy_rates$age_midpt, labels = italy_rates$age_grp) +
scale_y_continuous(label = percent_format(accuracy = 1)) +
scale_colour_manual(values = sex_cols) +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) +
labs(x = "Age group", colour = "", y = "Observed case fatality rate",
title = "Observed fatality rate of diagnosed COVID-19 cases in Italy to 19 March 2020",
subtitle = "20,686 men and boys with case fatality rate of 10.3%; 14,378 women and girls with case fatality rate of 6.2%",
caption = "Source: Istituto Superiore di Sanità, Roma")
#----------------Population rates ------------------
data(popF)
data(popM)
selected_countries <- c("Australia", "Italy", "Timor-Leste", "United States of America", "World",
"China", "Brazil", "Japan", "Germany")
age_lu <- tibble(age = unique(popF$age),
age_grp = c(rep(unique(italy_rates$age_grp), each = 2), "90+")) %>%
mutate(age_grp = factor(age_grp, levels = unique(age_grp)))
# Visual check that this shorthand worked ok
# View(age_lu)
pop_2020 <- popF %>%
mutate(sex = "Female") %>%
rbind(mutate(popM, sex = "Male")) %>%
select(country = name, age, pop = `2020`, sex) %>%
left_join(age_lu, by = "age") %>%
group_by(country, age_grp, sex) %>%
summarise(pop = sum(pop)) %>%
ungroup() %>%
filter(country %in% selected_countries) %>%
mutate(country = fct_drop(country)) %>%
group_by(country) %>%
mutate(prop = pop / sum(pop)) %>%
ungroup()
# check no misspellings in countries
stopifnot(sum(!selected_countries %in% unique(pop_2020$country)) == 0)
pop_2020 %>%
ggplot(aes(x = as.numeric(age_grp), y = prop, colour = sex)) +
geom_line() +
facet_wrap(~country) +
scale_y_continuous(label = percent_format(accuracy = 1)) +
scale_x_continuous(breaks = 1:10, labels = levels(pop_2020$age_grp)) +
scale_colour_manual(values = sex_cols) +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "Age group",
y = "",
colour = "",
title = "Estimated proportion of the population in 2020",
subtitle = "By age group and sex",
caption = "Source: UN World Population Prospects 2019")
#----------Combine fatality rate with population--------------------
the_caption = "Source: Italian case fatality rates to 19 March 2020 from Istituto Superiore di Sanità, Roma, combined with UN World Population Prospects 2019"
projected_cfr <- pop_2020 %>%
mutate(age_grp = as.character(age_grp)) %>%
left_join(italy_rates, by = c("age_grp", "sex")) %>%
group_by(country) %>%
summarise(cfr = sum(cfr * prop) /  sum(prop)) %>%
ungroup() %>%
mutate(country = fct_reorder(country, -cfr))
xlabel <- "Case fatality rate if rates observed in Italy applied to each country's total age and sex profile.\n
Do not treat these as forecasts of actual case fatality rate."
# Version 1:
projected_cfr %>%
ggplot(aes(y = country, x = cfr)) +
geom_point(colour = "steelblue") +
geom_text(aes(label = percent(cfr, accuracy = 0.1)), nudge_x = 0.001, size = 3) +
geom_segment(aes(yend = country, xend = 0), colour = "steelblue") +
scale_x_continuous(label = percent_format(accuracy = 0.1)) +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank()) +
labs(subtitle = xlabel,
y = "",
title = "Different age profiles can make a big difference to overall fatality rates, based on Italian data",
x = "Note that in observed situations (eg Italy 8.5% to 19 March 2020), raw case fatality rates are more than double
those shown here, suggesting younger cases are either not diagnosed or not occurring.",
caption = the_caption)
# Version 2, calibrated to actual Italy case fatality rate so far
projected_cfr %>%
mutate(cfr_adj = cfr / cfr[country == "Italy"] * 0.085) %>%
ggplot(aes(y = country, x = cfr_adj)) +
geom_point(colour = "steelblue") +
geom_text(aes(label = percent(cfr_adj, accuracy = 0.1)), nudge_x = 0.002, size = 3) +
geom_segment(aes(yend = country, xend = 0), colour = "steelblue") +
scale_x_continuous(label = percent_format(accuracy = 0.1)) +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank()) +
labs(subtitle = xlabel,
y = "",
title = "Different age profiles can make a big difference to overall fatality rates, based on Italian data",
x = "Estimates have been scaled to match Italy's raw case fatality rate to 19 March, to
reflect likely patterns in younger people's case rate and diagnosis.",
caption = the_caption)
#------------setup---------------
# 59% cases male
20686 / (20686 + 14378)
# 71% deaths men (no boys)
2139 / (2139 + 890)
library(tidyverse)
library(scales)
library(wpp2019)
install.packages("wpp2019")
library(wpp2019)
# colours for male and female used by Washington Post 2017; see https://blog.datawrapper.de/gendercolor/
sex_cols <- c(Male = "#F4BA3B", Female =  "#730B6D")
italy_rates <-tibble(
age_grp = rep(c('0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70-79', '80-89', '90+'), 2),
sex = rep(c("Male", "Female"), each = 10),
cfr = c(0, 0, 0, 0.6, 0.7,   1.7, 6.0, 17.8, 26.4, 32.5,
0, 0, 0, 0.2,   0.4, 0.6, 2.8,  10.7, 19.1,   22.3) / 100,
age_midpt = rep(c(5, 15, 25, 35, 45, 55, 65, 75, 85, 95), 2)
)
italy_rates %>%
ggplot(aes(x = age_midpt, y = cfr, colour = sex)) +
geom_point() +
geom_text(data = filter(italy_rates, cfr > 0.01),
aes(label = percent(cfr), y = cfr + 0.012), size = 3) +
geom_line() +
scale_x_continuous(breaks = italy_rates$age_midpt, labels = italy_rates$age_grp) +
scale_y_continuous(label = percent_format(accuracy = 1)) +
scale_colour_manual(values = sex_cols) +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) +
labs(x = "Age group", colour = "", y = "Observed case fatality rate",
title = "Observed fatality rate of diagnosed COVID-19 cases in Italy to 19 March 2020",
subtitle = "20,686 men and boys with case fatality rate of 10.3%; 14,378 women and girls with case fatality rate of 6.2%",
caption = "Source: Istituto Superiore di Sanità, Roma")
#----------------Population rates ------------------
data(popF)
data(popM)
#----------------Population rates ------------------
data(popF)
data(popM)
selected_countries <- c("Australia", "Italy", "Timor-Leste", "United States of America", "World",
"China", "Brazil", "Japan", "Germany")
age_lu <- tibble(age = unique(popF$age),
age_grp = c(rep(unique(italy_rates$age_grp), each = 2), "90+")) %>%
mutate(age_grp = factor(age_grp, levels = unique(age_grp)))
pop_2020 <- popF %>%
mutate(sex = "Female") %>%
rbind(mutate(popM, sex = "Male")) %>%
select(country = name, age, pop = `2020`, sex) %>%
left_join(age_lu, by = "age") %>%
group_by(country, age_grp, sex) %>%
summarise(pop = sum(pop)) %>%
ungroup() %>%
filter(country %in% selected_countries) %>%
mutate(country = fct_drop(country)) %>%
group_by(country) %>%
mutate(prop = pop / sum(pop)) %>%
ungroup()
# check no misspellings in countries
stopifnot(sum(!selected_countries %in% unique(pop_2020$country)) == 0)
pop_2020 %>%
ggplot(aes(x = as.numeric(age_grp), y = prop, colour = sex)) +
geom_line() +
facet_wrap(~country) +
scale_y_continuous(label = percent_format(accuracy = 1)) +
scale_x_continuous(breaks = 1:10, labels = levels(pop_2020$age_grp)) +
scale_colour_manual(values = sex_cols) +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "Age group",
y = "",
colour = "",
title = "Estimated proportion of the population in 2020",
subtitle = "By age group and sex",
caption = "Source: UN World Population Prospects 2019")
the_caption = "Source: Italian case fatality rates to 19 March 2020 from Istituto Superiore di Sanità, Roma, combined with UN World Population Prospects 2019"
projected_cfr <- pop_2020 %>%
mutate(age_grp = as.character(age_grp)) %>%
left_join(italy_rates, by = c("age_grp", "sex")) %>%
group_by(country) %>%
summarise(cfr = sum(cfr * prop) /  sum(prop)) %>%
ungroup() %>%
mutate(country = fct_reorder(country, -cfr))
xlabel <- "Case fatality rate if rates observed in Italy applied to each country's total age and sex profile.\n
Do not treat these as forecasts of actual case fatality rate."
# Version 1:
projected_cfr %>%
ggplot(aes(y = country, x = cfr)) +
geom_point(colour = "steelblue") +
geom_text(aes(label = percent(cfr, accuracy = 0.1)), nudge_x = 0.001, size = 3) +
geom_segment(aes(yend = country, xend = 0), colour = "steelblue") +
scale_x_continuous(label = percent_format(accuracy = 0.1)) +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank()) +
labs(subtitle = xlabel,
y = "",
title = "Different age profiles can make a big difference to overall fatality rates, based on Italian data",
x = "Note that in observed situations (eg Italy 8.5% to 19 March 2020), raw case fatality rates are more than double
those shown here, suggesting younger cases are either not diagnosed or not occurring.",
caption = the_caption)
# Version 2, calibrated to actual Italy case fatality rate so far
projected_cfr %>%
mutate(cfr_adj = cfr / cfr[country == "Italy"] * 0.085) %>%
ggplot(aes(y = country, x = cfr_adj)) +
geom_point(colour = "steelblue") +
geom_text(aes(label = percent(cfr_adj, accuracy = 0.1)), nudge_x = 0.002, size = 3) +
geom_segment(aes(yend = country, xend = 0), colour = "steelblue") +
scale_x_continuous(label = percent_format(accuracy = 0.1)) +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank()) +
labs(subtitle = xlabel,
y = "",
title = "Different age profiles can make a big difference to overall fatality rates, based on Italian data",
x = "Estimates have been scaled to match Italy's raw case fatality rate to 19 March, to
reflect likely patterns in younger people's case rate and diagnosis.",
caption = the_caption)
setwd("~/programming/r/r_workshop/code/Section 8")
library(car)
library(ggplot2)
library(tabplot)
library(corrplot)
library(scatterplot3d)
library(dplyr)
auto.mpg <- read.delim("auto-mpg.data.txt", header = FALSE,sep = "")
View(auto.mpg)
colnames(auto.mpg) <- c("mpg","cylinders","displacement","horsepower","weight","acceleration","model year","origin","car name")
View(auto.mpg)
str(auto.mpg)
auto.mpg$`car name` <- as.factor(auto.mpg$`car name`)
auto.mpg$horsepower <- as.factor(auto.mpg$horsepower)
summary(auto.mpg)
hist(auto.mpg$mpg)
hist(auto.mpg$displacement)
tableplot(auto.mpg[,-9])
pairs(auto.mpg)
ggplot(data = auto.mpg,aes(y=auto.mpg$weight, x=auto.mpg$mpg)) +geom_boxplot(aes(col=mpg))+labs(title="Boxplot of weight & mpg")
plot(auto.mpg$weight, auto.mpg$mpg)
plot(auto.mpg$mpg,auto.mpg$weight)
mod <- lm(formula = mpg ~ weight, data = auto.mpg)
summary(mod)
lmplot<-ggplot(data = auto.mpg, aes(x=weight, y=mpg)) + geom_point()
lmplot<- lmplot + geom_smooth(method ="lm", col="red")
lmplot + geom_smooth()
# visualize residuals & fitted line
?plot
lmplot + geom_smooth()
plot(mod, which = 1, pch=16)
plot(mod, which = 1, pch=16)
plot(auto.mpg, col="blue")
mod1 <- lm(formula = mpg ~ weight + displacement + acceleration, data = auto.mpg)
summary(mod1)
new.auto <- auto.mpg[,1:5]
head(new.auto)
str(new.auto)
new.auto$horsepower <- as.numeric(new.auto$horsepower)
new.auto$cylinders <- as.numeric(new.auto$cylinders)
str(new.auto)
cor.plot <- cor(as.matrix(new.auto))
corrplot(cor.plot)
corrplot(cor.plot, method = "number")
summary(mod)
plot(mod1, pch=16, which=1)
new.3dplot <- select(new.auto,cylinders,displacement,weight)
head(new.3dplot)
scatterplot3d(new.3dplot)
library(tidyverse)
library(ggplot2)
library(readr)
library(maps)
library(viridis)
## get the COVID-19 data
datacov <- read_csv("code/day_5/time_series_covid19_deaths_global.csv")
## get the world map
world <- map_data("world")
# cutoffs based on the number of cases
mybreaks <- c(1, 20, 100, 1000, 50000)
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3) +
geom_point(data=datacov, aes(x=Long, y=Lat, size=`3/3/20`, color=`3/3/20`),stroke=F, alpha=0.7) +
scale_size_continuous(name="Cases", trans="log", range=c(1,7),breaks=mybreaks, labels = c("1-19", "20-99", "100-999", "1,000-49,999", "50,000+")) +
# scale_alpha_continuous(name="Cases", trans="log", range=c(0.1, 0.9),breaks=mybreaks) +
scale_color_viridis_c(option="inferno",name="Cases", trans="log",breaks=mybreaks, labels = c("1-19", "20-99", "100-999", "1,000-49,999", "50,000+")) +
theme_void() +
guides( colour = guide_legend()) +
labs(caption = "Data Repository provided by Johns Hopkins CSSE. Visualization by DataScience+ ") +
theme(
legend.position = "bottom",
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#ffffff", color = NA),
panel.background = element_rect(fill = "#ffffff", color = NA),
legend.background = element_rect(fill = "#ffffff", color = NA)
)
## get the world map
world <- map_data("world")
# cutoffs based on the number of cases
mybreaks <- c(1, 20, 100, 1000, 50000)
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3) +
geom_point(data=datacov, aes(x=Long, y=Lat, size=`3/3/20`, color=`3/3/20`),stroke=F, alpha=0.7) +
scale_size_continuous(name="Cases", trans="log", range=c(1,7),breaks=mybreaks, labels = c("1-19", "20-99", "100-999", "1,000-49,999", "50,000+")) +
# scale_alpha_continuous(name="Cases", trans="log", range=c(0.1, 0.9),breaks=mybreaks) +
scale_color_viridis_c(option="inferno",name="Cases", trans="log",breaks=mybreaks, labels = c("1-19", "20-99", "100-999", "1,000-49,999", "50,000+")) +
theme_void() +
guides( colour = guide_legend()) +
labs(caption = "Data Repository provided by Johns Hopkins CSSE. Visualization by DataScience+ ") +
theme(
legend.position = "bottom",
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#ffffff", color = NA),
panel.background = element_rect(fill = "#ffffff", color = NA),
legend.background = element_rect(fill = "#ffffff", color = NA)
)
#------------setup---------------
# 59% cases male
20686 / (20686 + 14378)
# 71% deaths men (no boys)
2139 / (2139 + 890)
library(tidyverse)
library(scales)
library(wpp2019)
# colours for male and female used by Washington Post 2017; see https://blog.datawrapper.de/gendercolor/
sex_cols <- c(Male = "#F4BA3B", Female =  "#730B6D")
italy_rates <-tibble(
age_grp = rep(c('0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70-79', '80-89', '90+'), 2),
sex = rep(c("Male", "Female"), each = 10),
cfr = c(0, 0, 0, 0.6, 0.7,   1.7, 6.0, 17.8, 26.4, 32.5,
0, 0, 0, 0.2,   0.4, 0.6, 2.8,  10.7, 19.1,   22.3) / 100,
age_midpt = rep(c(5, 15, 25, 35, 45, 55, 65, 75, 85, 95), 2)
)
italy_rates %>%
ggplot(aes(x = age_midpt, y = cfr, colour = sex)) +
geom_point() +
geom_text(data = filter(italy_rates, cfr > 0.01),
aes(label = percent(cfr), y = cfr + 0.012), size = 3) +
geom_line() +
scale_x_continuous(breaks = italy_rates$age_midpt, labels = italy_rates$age_grp) +
scale_y_continuous(label = percent_format(accuracy = 1)) +
scale_colour_manual(values = sex_cols) +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) +
labs(x = "Age group", colour = "", y = "Observed case fatality rate",
title = "Observed fatality rate of diagnosed COVID-19 cases in Italy to 19 March 2020",
subtitle = "20,686 men and boys with case fatality rate of 10.3%; 14,378 women and girls with case fatality rate of 6.2%",
caption = "Source: Istituto Superiore di Sanità, Roma")
#----------------Population rates ------------------
data(popF)
data(popM)
selected_countries <- c("Australia", "Italy", "Timor-Leste", "United States of America", "World",
"China", "Brazil", "Japan", "Germany")
age_lu <- tibble(age = unique(popF$age),
age_grp = c(rep(unique(italy_rates$age_grp), each = 2), "90+")) %>%
mutate(age_grp = factor(age_grp, levels = unique(age_grp)))
pop_2020 <- popF %>%
mutate(sex = "Female") %>%
rbind(mutate(popM, sex = "Male")) %>%
select(country = name, age, pop = `2020`, sex) %>%
left_join(age_lu, by = "age") %>%
group_by(country, age_grp, sex) %>%
summarise(pop = sum(pop)) %>%
ungroup() %>%
filter(country %in% selected_countries) %>%
mutate(country = fct_drop(country)) %>%
group_by(country) %>%
mutate(prop = pop / sum(pop)) %>%
ungroup()
# check no misspellings in countries
stopifnot(sum(!selected_countries %in% unique(pop_2020$country)) == 0)
pop_2020 %>%
ggplot(aes(x = as.numeric(age_grp), y = prop, colour = sex)) +
geom_line() +
facet_wrap(~country) +
scale_y_continuous(label = percent_format(accuracy = 1)) +
scale_x_continuous(breaks = 1:10, labels = levels(pop_2020$age_grp)) +
scale_colour_manual(values = sex_cols) +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "Age group",
y = "",
colour = "",
title = "Estimated proportion of the population in 2020",
subtitle = "By age group and sex",
caption = "Source: UN World Population Prospects 2019")
the_caption = "Source: Italian case fatality rates to 19 March 2020 from Istituto Superiore di Sanità, Roma, combined with UN World Population Prospects 2019"
projected_cfr <- pop_2020 %>%
mutate(age_grp = as.character(age_grp)) %>%
left_join(italy_rates, by = c("age_grp", "sex")) %>%
group_by(country) %>%
summarise(cfr = sum(cfr * prop) /  sum(prop)) %>%
ungroup() %>%
mutate(country = fct_reorder(country, -cfr))
xlabel <- "Case fatality rate if rates observed in Italy applied to each country's total age and sex profile.\n
Do not treat these as forecasts of actual case fatality rate."
# Version 1:
projected_cfr %>%
ggplot(aes(y = country, x = cfr)) +
geom_point(colour = "steelblue") +
geom_text(aes(label = percent(cfr, accuracy = 0.1)), nudge_x = 0.001, size = 3) +
geom_segment(aes(yend = country, xend = 0), colour = "steelblue") +
scale_x_continuous(label = percent_format(accuracy = 0.1)) +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank()) +
labs(subtitle = xlabel,
y = "",
title = "Different age profiles can make a big difference to overall fatality rates, based on Italian data",
x = "Note that in observed situations (eg Italy 8.5% to 19 March 2020), raw case fatality rates are more than double
those shown here, suggesting younger cases are either not diagnosed or not occurring.",
caption = the_caption)
