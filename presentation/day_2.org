#   ____       ____                                                _
#  |  _ \     |  _ \ _ __ ___   __ _ _ __ __ _ _ __ ___  _ __ ___ (_)_ __   __ _
#  | |_) |____| |_) | '__/ _ \ / _` | '__/ _` | '_ ` _ \| '_ ` _ \| | '_ \ / _` |
#  |  _ <_____|  __/| | | (_) | (_| | | | (_| | | | | | | | | | | | | | | | (_| |
#  |_| \_\    |_|   |_|  \___/ \__, |_|  \__,_|_| |_| |_|_| |_| |_|_|_| |_|\__, |
#                              |___/                                       |___/

#+TITLE: *Machine Learning & Data Science with R* (Day-2)
#+AUTHOR: Prof. T. R. Mahore
#+DATE: April 12 2021

* Today's contents

1. Hand's on R (continued...)

2. Fundamentals of Machine Learning

* Hand's on R

The contents are in previous day's file.

* Fundamentals of Machine Learning

** Reading Various Kind's of Files with R
** Data Pre-Processing Introduction
*** R Base functions

- Use "$" sign to select variables

- Use "[row,column]" to select rows and columns

- If you leave blank row value and enter only column in above command, all the rows will be selected and vice versa. Or use subset.

- You can use following command to select and update a column/variable.

  #+begin_example
  dataframe$columnname = as.numeric/factor(dataframe$columnname)
  #+end_example

*** Merge

- merge(x,y,...)

- Where "x" and "y" are two seperate data frames

*** With function

- with

  #+begin_example
  a = mean(fb$Lifetime.Post.Total.Reach + fb$page.total.likes + fb$Lifetime.Post.Total.Impressions)
  a
  #+end_example

- Using with() we can clean this up

  #+begin_example
  a = with(fb, mean(Lifetime.Post.Total.Reach + page.total.likes + Lifetime.Post.Total.Impressions))
  a
  #+end_example

*** More functions to manage data

- order data

- sort data

- rbind & cbind

*** dplyr

**** Functions

- select: return a subset of the columns of a data frame

- filter: extract a subset of rows from a data frame based on logical conditions

- arrange: reorder rows of a data frame

- rename: rename variable in a data frame

- mutate: add new variables/columns or transform existing variables

- sumarise/sumarize: generate summary statistics of different variables in data frame

**** Arguments

- The first argument is a data frame

- The subsequent arguments describe what to do with it, and you can refer to columns in the data frame directly without using the "$" operator (just use the names).

- The result is a new data frame

- Data frames must be properly formatted and annotated for this

- to all be useful

**** library(dplry)

- Select Example: head(select(dataframe, column1:column-n))

- Filter Example:filter(select(dataframe, column1:column-n))

- Arrange: Reordering rows of a data frame (while preserving corrosponding order of other columns) is normally a pain to do in R

- Rename function

*** tidyr

- library(tidyr)

- gather(): takes multiple columns, and gathers them into key-value pairs (it makes wide data longer)

- spread(): takes two columns (key & value) and spreads in to multiple columns (it makes long data wider)

- seperate(): given either regular expression or a vector of character positions turns a single character column into multiple columns

- extract(): given a regular expression with capturing groups, it turns each group into a new column. If the groups don't match, or the input is NA, the output will be NA.

*** lubridate

- This package is used to handle dates like time zones, calculation realated to time.

- as.duration(x) example:

  #+begin_example
  library(lubridate)
  x <- interval(ymd("2018-01-01"),ymd("2018-09-18"))
  as.duration(x)

  [1] "22464000s (~37.14 weeks)"
  #+end_example

*** Important Functions

1. help() or ? followed by function name
2. example()
3. c(), scan()
4. seq()
5. rep()
6. data()
7. View()
8. Make.names()
9. str()
10. read.csv(), read.tables()
11. library(), require()
12. dim()
13. length()
14. ls()
15. rm() Removes an Item from memory
16. names() Lists names of variables in the data.frame

*** Handeling Different types of Data

1. as.interger()
2. as.numeric()
3. as.character()
4. as.data.frame()

*** Dealing with Missing values & NA's

1. Replace missing values with NA
2. Replace NA with mean, median or mode

*** Data source

- https://www.kaggle.com/c/titanic/data
